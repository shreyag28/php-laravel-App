image: php:8.2-fpm

pipelines:
  default:
    - parallel:
      - step:
         services:
           - mysql
         name: 'Build and Test'
         script:
           # Build the project
           - apt -qy update
           - apt -qy install curl git zip unzip libzip-dev default-mysql-client
           - docker-php-ext-install pdo_mysql ctype bcmath zip
           - curl --silent --show-error https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
           - apt -qy install npm
           - composer install --no-interaction
           - npm install
           - php artisan key:generate
           - php artisan migrate --no-interaction
           - php artisan db:seed
           - npm run prod
           # Start server
           - php artisan serve &
           - sleep 5
           # Run PHP Unit Tests
           - ./vendor/bin/phpunit

      - step:
         name: 'Deploy'
         deployment: production
         # trigger: 'manual'
         script:
           # Build for production
           - apt -qy update
           - apt -qy install curl git zip unzip libzip-dev default-mysql-client
           - docker-php-ext-install pdo_mysql ctype bcmath zip
           - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
           - apt -qy install npm
           - npm install
           - npm run prod
           - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
           - unzip awscliv2.zip
           - ./aws/install
           - aws configure set aws_access_key_id $AWS_ACCESS_ID
           - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
           - aws configure set region $AWS_DEFAULT_REGION
           - rm -rf ./aws
           - rm -rf awscliv2.zip

           # Create tar file and store in S3 bucket
           - HASH=`git rev-parse --short HEAD`
           - BUNDLE=$HASH.tar.gz
           - S3_BUCKET_ENDPOINT="s3://$S3_BUCKET/bundles/"
           - rm -rf bundle-*.tar.gz
           - tar --exclude='*.git*' --exclude='storage/logs/*' --exclude='vendor/*' --exclude='bootstrap/cache/*' --exclude='artifact/*' --exclude='.styleci.yml' --exclude='.env' -zcf $BUNDLE -T bundle.conf > /dev/null 2>&1
           - aws s3 cp $BUNDLE $S3_BUCKET_ENDPOINT > /dev/null 2>&1
           
           # Run AWS CodeDeploy
           - aws deploy create-deployment --application-name $APPLICATION_NAME --deployment-config-name $DEPLOYMENT_CONFIG_NAME --deployment-group-name $DEPLOYMENT_GROUP_NAME --file-exists-behavior OVERWRITE --s3-location bucket=$S3_BUCKET,bundleType=tgz,key=bundles/$BUNDLE

definitions:
 services:
   mysql:
     image: mysql:8.0
     environment:
       MYSQL_DATABASE: 'laravel'
       MYSQL_ROOT_PASSWORD: 'l@r@vel'
       